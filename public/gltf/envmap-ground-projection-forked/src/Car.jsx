/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useLayoutEffect, useRef } from 'react'
import { useGLTF, CubeCamera } from '@react-three/drei'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/porsche-transformed.glb')

  useLayoutEffect(() => {}, [materials])

  return (
    <group ref={group} {...props} dispose={null}>
      <CubeCamera frames={1} position={[0, 1.5, 0]} near={0.1} resolution={128}>
        {(texture) => {
          console.log(texture);
          
          return(
          <group position={[0, -1.5, 0]}>
            <group rotation={[Math.PI / 2, 0, 0]}></group>
            <group position={[-7.966238, -0.10155, -7.966238]} scale={0.000973}>
              <mesh geometry={nodes.mesh_0.geometry} material={materials.paint} material-envMap={texture} />
              <mesh geometry={nodes.mesh_0_1.geometry} material={materials['930_chromes']} />
              <mesh geometry={nodes.mesh_0_2.geometry} material={materials.black} />
              <mesh geometry={nodes.mesh_0_3.geometry} material={materials['930_lights']} />
              <mesh geometry={nodes.mesh_0_4.geometry} material={materials.glass} />
              <mesh geometry={nodes.mesh_0_5.geometry} material={materials['930_stickers']} />
              <mesh geometry={nodes.mesh_0_6.geometry} material={materials['930_plastics']} material-polygonOffset material-polygonOffsetFactor={-10} />
              <mesh geometry={nodes.mesh_0_7.geometry} material={materials['930_lights_refraction']} />
              <mesh geometry={nodes.mesh_0_8.geometry} material={materials['930_rim']} />
              <mesh geometry={nodes.mesh_0_9.geometry} material={materials['930_tire']} />
            </group>
          </group>
        )}}
      </CubeCamera>
    </group>
  )
}

useGLTF.preload('/porsche-transformed.glb')
